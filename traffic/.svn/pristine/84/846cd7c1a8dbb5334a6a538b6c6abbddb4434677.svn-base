/*
 * @Author: fuping
 * @Date: 2020-03-19 14:26:18
 * @LastEditors: fuping
 * @LastEditTime: 2020-05-10 03:10:28
 * @Description:
 */
import { Module, MutationTree, ActionTree, ActionContext, GetterTree } from 'vuex'
import { RootState } from './../store'
import { removeSession } from '@/utils/cookiesUtil'

export interface IUserState {
  token: string
  loginState: Boolean
}

const userState: IUserState = {
  token: '',
  loginState: false
}

const mutations: MutationTree<IUserState> = {
  tokenState(state: IUserState, payload: any) {
    console.log(payload)
    state.token = payload
  },
  loginState(state: IUserState, appinfo: any) {
    // state.loginState = appinfo.loginState
  }
}

const actions: ActionTree<IUserState, RootState> = {
  /**
   * 设置loginState状态
   * @param context
   * @param param
   */
  SET_TOKEN(context: ActionContext<IUserState, RootState>, param: any) {
    context.commit('tokenState', param.token)
  },
  RESET_TOKEN(context: ActionContext<IUserState, RootState>, param: any) {
    removeSession('token')
    context.commit('tokenState', '')
    location.reload()
  }
  // setLoginState(context: ActionContext<IUserState, RootState>, param: any) {
  //   console.log(param)
  //   context.commit('loginState', param)
  // }
}

const getters: GetterTree<IUserState, RootState> = {
  getTokenState(state: IUserState) {
    return state.token
  }
}

const user: Module<IUserState, RootState> = {
  namespaced: true,
  state: userState,
  getters,
  actions,
  mutations
}

export default user
