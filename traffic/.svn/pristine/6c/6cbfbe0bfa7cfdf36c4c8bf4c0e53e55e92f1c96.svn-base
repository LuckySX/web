<!--
 * @Author: fuping
 * @Date: 2020-03-19 14:55:09
 * @LastEditors: fuping
 * @LastEditTime: 2020-03-20 14:55:17
 * @Description: 
 -->
<template>
  <div :class="overall.main">
    <div :class="overall.dataBox">
      <el-form :inline="true" :model="FormItems" label-position="left" label-width="80px">
        <el-form-item label="开始时间：">
          <el-date-picker
            v-model="FormItems.startTime"
            type="datetime"
            placeholder=""
            align="right"
            value-format="yyyy-MM-dd HH:00:00"
            :picker-options="startPickerOptions">
          </el-date-picker>
        </el-form-item>
        <el-form-item label="结束时间：">
          <el-date-picker
            v-model="FormItems.endTime"
            type="datetime"
            placeholder=""
            align="right"
            value-format="yyyy-MM-dd HH:00:00"
            :picker-options="endPickerOptions">
          </el-date-picker>
        </el-form-item>
      </el-form>
    </div>
    <div :class="overall.contentBox">
      <div :class="overall.chartPart">
        <div :class="overall.chartBox">
          <BorderBox title="被攻击IP TOP 5" type="bar">
            <BaseCharts v-if="loadedBar" :option="barOption" :theme="'vintage'"></BaseCharts>
          </BorderBox>
        </div>
        <div :class="overall.chartBox">
          <BorderBox title="高峰攻击速率/ 连接数" type="scatter">
            <BaseCharts v-if="loadedScatter" :option="scatterOption" :theme="'vintage'"></BaseCharts>
          </BorderBox>
        </div>
      </div>
      <div :class="overall.tablePart">
        <BorderBox title="事件列表" type="table">
          <div :class="overall.tableForm">
            <el-form :inline="true" :model="TableFormItems" label-position="left" label-width="100px">
              <el-form-item label="端口：" label-width="50px">
                <el-input v-model="TableFormItems.Port"></el-input>
              </el-form-item>
              <el-form-item label="协议类型：" label-width="70px">
                <el-select v-model="TableFormItems.ProtocolType" placeholder="请选择">
                  <el-option
                    v-for="item in ProtocolOpt"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
              <el-form-item label="疑似攻击类型：">
                <el-select 
                  v-model="TableFormItems.SuspectedAttackType" 
                  placeholder="请选择">
                  <el-option
                    v-for="item in AttackOpt"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
              <el-form-item label="危险等级程度：">
                <el-select 
                  v-model="TableFormItems.RiskLevel" 
                  placeholder="请选择">
                  <el-option
                    v-for="item in RiskOpt"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
              <el-form-item>
                <el-button type="primary" @click="handleQueryBtn">查询</el-button>
                <el-button type="primary" @click="handleResetBtn">重置</el-button>
                <el-button type="primary" @click="handleExportBtn">导出</el-button>
              </el-form-item>   
            </el-form>
          </div>
          
        </BorderBox>
      </div>
    </div>
  </div>
</template>

<script lang="ts">
// @ is an alias to /src
import { Component, Vue } from 'vue-property-decorator'
import BorderBox from '@/components/Common/BorderBox.vue'
import { ECharts } from 'echarts'
import { http } from '@/common/request'
import dayjs from 'dayjs'

@Component({
  components: {
    BorderBox
  }
})
export default class Overall extends Vue {
  // 全局日期选择器
  private FormItems = {
    startTime: dayjs().format('YYYY-MM-DD 00:00:00'),
    endTime: new Date()
  };
  // 只能选择开始时间之前
  private startPickerOptions = {
    disabledDate: (time: any) => {
        let endDateVal = this.FormItems.endTime;
        if (endDateVal) {
            return time.getTime() > new Date(endDateVal).getTime();
        }
    }
  };
  // 只能选择当前时间之后
  private endPickerOptions = {
    disabledDate: (time: any) => {
        let beginDateVal = this.FormItems.startTime;
        if (beginDateVal) {
            return time.getTime() < new Date(beginDateVal).getTime();
        }
    }
  };
  // 表格条件选择器
  private TableFormItems = {
    Port: '',
    ProtocolType: '',
    SuspectedAttackType: '',
    RiskLevel: ''
  };
  // 协议类型
  private ProtocolOpt = [
    {label: '全部', value: ''},
    {label: '移动', value: 1},
    {label: '联通', value: 2},
    {label: '电信', value: 3}
  ]
  // 疑似攻击类型
  private AttackOpt = [
    {label: '全部', value: ''},
    {label: '移动', value: 1},
    {label: '联通', value: 2},
    {label: '电信', value: 3}
  ]
  // 危险等级
  private RiskOpt = [
    {label: '全部', value: ''},
    {label: '移动', value: 1},
    {label: '联通', value: 2},
    {label: '电信', value: 3}
  ]
  
  private loadedBar = false
  private loadedScatter = true
  // echarts bar
  private barOption = {
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        type: 'shadow'
      }
    },
    grid: {
      left: '3%',
      right: '4%',
      bottom: 0,
      top: 0,
      containLabel: true
    },
    yAxis: [
      {
        type: 'category',
        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        axisTick: {
            alignWithLabel: true
        }
      }
    ],
    xAxis: [
      {
        type: 'value'
      }
    ],
    series: [
      {
        name: '直接访问',
        type: 'bar',
        barWidth: '60%',
        data: [10, 52, 200, 334, 390, 330, 220]
      }
    ]
  } as any
  private scatterOption = {
    xAxis: {},
    yAxis: {},
    grid: {
      left: 10,
      right: '4%',
      bottom: 0,
      top: 10,
      containLabel: true
    },
    series: [{
      symbolSize: 20,
      data: [
          [10.0, 8.04],
          [8.0, 6.95],
          [13.0, 7.58],
          [9.0, 8.81],
          [11.0, 8.33],
          [14.0, 9.96],
          [6.0, 7.24],
          [4.0, 4.26],
          [12.0, 10.84],
          [7.0, 4.82],
          [5.0, 5.68]
        ],
        type: 'scatter'
    }]
  };
  private ei: any | ECharts = {}
  mounted() {
    http.get('/demo/pie').then((res: any) => {
      console.log(res)
      this.barOption.series[0].data = res.data
      this.barOption.yAxis[0].data = res.name
      this.loadedBar = true
    })
  }
  // methods
  // 查询按钮
  private handleQueryBtn () {

  }
  // 重置按钮
  private handleResetBtn () {
    this.TableFormItems = {
      Port: '',
      ProtocolType: '',
      SuspectedAttackType: '',
      RiskLevel: ''
    }
  }
  // 导出按钮
  private handleExportBtn () {
    // console.log()
  }
}
</script>
<style module="overall">
.main {
  /* 50= navbar  50  */
  width: 100%;
  height: 100%;
}
.dataBox {
  height: 40px;
  text-align: left;
}
.contentBox {
  height: calc(100% - 40px);
}
.chartPart {
  display: flex;
  width: 100%;
  height: calc(40% - 10px);
  margin-bottom: 10px;
  justify-content: space-between;
}
.chartBox {
  width: calc(50% - 5px);
  height: 100%;
}
.tablePart {
  width: 100%;
  height: 60%;
}
.tableForm {
  text-align: left;
}
</style>
