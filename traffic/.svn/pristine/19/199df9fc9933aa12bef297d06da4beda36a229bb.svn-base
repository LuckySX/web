<!--
 * @Author: zhangjipei
 * @Date: 2020-03-20 19:30:20
 * @LastEditors: zhangjipei
 * @LastEditTime: 2020-04-09 10:14:38
 * @Description: 
 -->
<template>
  <div :class="menuForm.container">
    <!-- <router-link to="/DDosOverall">DDosOverall</router-link> -->
    <el-menu :default-active="activeMenu" router unique-opened :collapse="isCollapse">
      <template v-for="(menu, index) in mlist">
        <template v-if="menu.sonmenu && menu.sonmenu.length > 0">
          <el-submenu :index="menu.id" :key="index">
            <template slot="title">
              <i :class="[menuForm.icon, iconStyle(menu.id)]"></i>
              <span slot="title">{{ menu.name }}</span>
            </template>
            <template v-for="(cMenu, cIndex) in menu.sonmenu">
              <template v-if="cMenu.name && cMenu.sonmenu && cMenu.sonmenu.length > 0">
                <el-submenu :index="cMenu.url" :ref="cMenu.url" :key="cIndex">
                  <span slot="title">{{ cMenu.name }}</span>
                  <template v-for="(cCMenu, cCIndex) in cMenu.sonmenu">
                    <el-menu-item :index="`${menu.url}/${cMenu.url}/${cCMenu.url}`" :key="cCIndex">
                      {{ cCMenu.name }}
                    </el-menu-item>
                  </template>
                </el-submenu>
              </template>
              <template
                v-if="
                  cMenu.name && (!cMenu.sonmenu || (cMenu.sonmenu && cMenu.sonmenu.length <= 0))
                "
              >
                <el-menu-item :index="`${menu.url}/${cMenu.url}`" :key="cIndex">
                  {{ cMenu.name }}
                </el-menu-item>
              </template>
            </template>
          </el-submenu>
        </template>
        <template v-else>
          <el-menu-item :index="`/${menu.url}`" :key="index">
            <template>
              <i :class="[menuForm.icon, iconStyle(menu.id)]"></i>
              <span slot="title">{{ menu.name }}</span>
            </template>
          </el-menu-item>
        </template>
      </template>
    </el-menu>
  </div>
</template>

<script lang="ts">
import { Component, Vue, Watch } from 'vue-property-decorator'
import { Action, namespace } from 'vuex-class'
// import { http } from '@/common/request'

const appModuleVuex = namespace('app')
@Component({})
export default class MenuForm extends Vue {
  // private mlist : any = [
  // {
  //   name: 'DDoS攻击监测',
  //   url: '',
  //   icon: '9',
  //   id: '1',
  //   sonmenu: [
  //     {
  //       name: 'DDoS攻击事件',
  //       url: 'DDosOverall'
  //     },
  //     {
  //       name: '实时监测',
  //       url: 'DDosRealTime'
  //     }
  //   ]
  // }
  // ]
  private activeMenu = '/DDosRealTime'
  // private isCollapse : boolean = false
  private menuForm: any
  private criticalWidth = 1440

  @Watch('$route.path', { deep: true })
  private routePathChanged(val: any, oldVal: any) {
    console.log(val, oldVal)
    if (val === '/login') {
      this.$ss.remove('userId')
      this.$emit('change', false)
    } else {
      if (val === '/DDosRealTime' || val === '/DDosOverall' || val === '/DDosDetails') {
        this.setMenuListAction({
          id: 40000
        })
      } else if (val === '/FlowOverview' || val === '/KeyAsset' || val === '/TrafficTrend') {
        this.setMenuListAction({
          id: 10000
        })
      }
      this.activeMenu = val
    }
  }

  @appModuleVuex.Getter('getCollapse') isCollapse!: boolean
  @appModuleVuex.Getter('getMenuList') mlist!: any

  @Action('app/setCollapseAction') setCollapseAction!: Function
  @Action('app/setMenuListAction') setMenuListAction!: Function

  iconStyle(icon: string) {
    const name = `menu${icon}`
    return this.menuForm[name]
  }
  resizeEventHandler(): void {
    this.setCollapseAction({ isCollapse: document.body.offsetWidth <= this.criticalWidth })
  }
  created() {
    const ROUTER_PATH = this.$route.path
    if (ROUTER_PATH === '/Menu/getlistPage') {
      this.setMenuListAction({
        id: this.$route.query.id
      })
      if (Number(this.$route.query.id) === 10000) {
        this.$router.push({
          path: '/FlowOverview'
        })
      } else if (Number(this.$route.query.id) === 40000) {
        this.$router.push({
          path: '/DDosRealTime'
        })
      }
    }
  }
  mounted() {
    // console.log(this.isCollapse, document.body.offsetWidth)
    this.setCollapseAction({ isCollapse: document.body.offsetWidth <= this.criticalWidth })
    if (window.addEventListener) {
      window.addEventListener('resize', this.resizeEventHandler, false)
    } else if (window.attachEvent) {
      window.attachEvent('resize', this.resizeEventHandler)
    }
  }
  destoryed() {
    if (window.removeEventListener) {
      window.removeEventListener('resize', this.resizeEventHandler, false)
    } else if (window.detachEvent) {
      window.detachEvent('resize', this.resizeEventHandler)
    }
  }
}
</script>
<style module="menuForm">
.container {
  width: 100%;
  height: 100%;
  background: #012a6c;
}
.icon {
  display: inline-block;
  width: 40px;
  height: 40px;
  margin-left: -20px;
}
.menu9 {
  background: url('~@/assets/images/menu/9.png') no-repeat center;
  background-size: 50%;
}
.menu10001 {
  background: url('~@/assets/images/submenu/10001.png') no-repeat center;
}
.menu10001:hover {
  background: url('~@/assets/images/submenu/10001h.png') no-repeat center;
}
.menu10002 {
  background: url('~@/assets/images/submenu/10002.png') no-repeat center;
}
.menu10002:hover {
  background: url('~@/assets/images/submenu/10002h.png') no-repeat center;
}
.menu10003 {
  background: url('~@/assets/images/submenu/10003.png') no-repeat center;
}
.menu10003:hover {
  background: url('~@/assets/images/submenu/10003h.png') no-repeat center;
}
.menu40001 {
  background: url('~@/assets/images/submenu/40001.png') no-repeat center;
}
.menu40001:hover {
  background: url('~@/assets/images/submenu/40001h.png') no-repeat center;
}
.menu40002 {
  background: url('~@/assets/images/submenu/40002.png') no-repeat center;
}
.menu40002:hover {
  background: url('~@/assets/images/submenu/40002h.png') no-repeat center;
}
</style>
