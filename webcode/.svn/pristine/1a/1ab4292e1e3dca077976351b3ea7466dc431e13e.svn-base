<!--
 * @Author: zhangjipei
 * @Date: 2020-03-25 09:27:42
 * @LastEditors: zhangjipei
 * @LastEditTime: 2020-03-25 16:01:44
 * @Description: 
 -->
<template>
  <div :class="Login.container">
    <div :class="Login.loginBox">
      <div :class="Login.title">登录</div>
      <ol :class="Login.inputGroup">
        <li>
          <label>用户名</label>
          <input v-model="loginForm.userName" type="text" name="user" />
          <strong title=""></strong>
        </li>
        <li>
          <label>密码</label>
          <input v-model="loginForm.userPassword" type="password" name="pwd" />
          <strong title=""></strong>
        </li>
        <li>
          <label>验证码</label>
          <input v-model="loginForm.veryfycode" type="text" name="code" />
          <b>
            <img
              :src="verificationSrc"
              :class="Login.verification"
              title="刷新"
              @click="changeVerification" />
          </b>
        </li>
        <li :class="Login.checkBox">
          <input v-model="loginForm.loginStatus" type="checkbox" name="checkbox" />
          <span>记住密码</span>
        </li>
        <li>
          <input type="button" @click="login" :value="buttonValue" />
        </li>
      </ol>
    </div>
  </div>
</template>

<script lang="ts">
import { Component, Prop, Vue } from 'vue-property-decorator'
import { http } from '@/common/request'

@Component({})
export default class Login extends Vue {
  @Prop() private isLogin!: any

  private buttonValue : string = `登   录`;
  private loginForm = {
    userName: '',
    userPassword: '',
    veryfycode: '',
    loginStatus: ''
  }
  private verificationSrc = '/netSecur-web/imageCode/getImage';
  // private loginData: this.isLogin;
  private changeVerification () {
    this.verificationSrc = `/netSecur-web/imageCode/getImage?${new Date()}`
  }
  private login () {
    let username = this.loginForm.userName;
    let password = this.loginForm.userPassword;
    this.checkLogin(username, password);
  }
  private checkLogin (username, password) {
    if (username === '') {
      this.$message('用户名不能为空');
      return false;
    }
    if (password === '') {
      this.$message('密码不能为空');
      return false;
    }
    // http.post('/netSecur-web/login/login', {
    //   'username': username,
    //   'password': password
    // }).then((res: any) => {
    //   let result = res.data;
    //   if (result === true) {
    //     let code = this.loginForm.veryfycode;
    //     this.checkImageCode(code, password);
    //     return false;
    //   }
    // });
    this.goToPage();
  }
  private checkImageCode(code, password) {
    http.post('/netSecur-web/imageCode/checkImage', {
      'checkCode': code,
      'password': password
    }).then((res: any) => {});
  }
  private goToPage () {
    this.$emit('change', true);
    this.$router.push({
      path: '/DDosOverall'
    });
    this.$ss.set('userId', 'admin');
  }
  private mounted () {
    this.changeVerification();
  }
}
</script>

<style module="Login">
.container {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: url('~@/assets/images/sys/loginBg.jpg') no-repeat;
  background-size: 100% 120%;
  background-position: 0;
  position: relative;
}
.loginBox {
  width: 460px;
  height: 350px;
  background: #fff;
  position: absolute;
  left: 50%;
  margin-left: -230px;
  top: 50%;
  margin-top: -175px;
  border-radius: 5px;
  box-sizing: border-box;
  padding: 25px 80px;
}
.title {
  font-size: 24px;
  color: #404040;
  text-align: center;
  letter-spacing: 5px;
  margin-bottom: 20px;
}
.inputGroup {
  padding: 0;
  margin: 0;
}
.inputGroup, .inputGroup li {
  list-style: none;
}
.inputGroup li {
  position: relative;
  height: 50px;
  margin-bottom: 10px;
  display: flex;
  flex-direction: column;
}
.inputGroup li.checkBox {
  flex-direction: row;
  height: 20px;
  line-height: 20px;
}
.inputGroup li:last-child {
    margin-top: 15px;
}
.inputGroup li label {
  font-size: 15px;
  color: #266ebd;
  display: inline-block;
  margin-bottom: 5px;
  text-align: left;
}
.inputGroup li input {
	height: 30px;
  line-height: 30px;
  width: 100%;
  background: #FFF;
  border-bottom: 1px solid #7b7b7b;
  font-size: 15px;
  outline: none;
}
.inputGroup li input[type=checkbox] {
  width: 13px;
  height: 13px;
  display: inline-block;
  vertical-align: middle;
  margin-top: 4px;
  margin-right: 6px;
}
.inputGroup li input[type=button] {
  height: 40px;
  font-size: 18px;
  border-radius: 3px;
  border: none;
  color: #fff;
  background:linear-gradient(to right,#004bdd,#0076e5);
}
.inputGroup li input[type=button]:hover {
  background: #0076e5;
}
.inputGroup li span {
  color: #376ebd;
  font-size: 13px;
  text-align: left;
}
.inputGroup li a {
  text-decoration: none;
  color: #FFF;
  font-size: 13px;
  margin-left: 130px;
}
.inputGroup li b {
  position: absolute;
  right: 0px;
  top: 6px;
  height: 40px;
  width: 88px;
  text-align: center;
  font-size: 24px;
  line-height: 38px;
  color: #FFF;
  animation: my1 1.5s linear infinite alternate;
  border: 1px solid #a09b9b;
}
.inputGroup li strong {
  display: inline-block;
  font-weight: normal;
  color: E25252;
  font-size: 14px;
  position: absolute;
  right: 5px;
  top: 30px;
}
.verification {
  cursor: pointer;
  margin-left: 5px;
  width: 80px;
  height: 35px;
}
</style>
