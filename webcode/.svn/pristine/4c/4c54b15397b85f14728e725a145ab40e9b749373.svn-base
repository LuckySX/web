<!--
 * @Description: 地域统计
 * @Autor: niumiaomiao
 * @Date: 2020-04-16 15:33:36
 * @LastEditors: niumiaomiao
 * @LastEditTime: 2020-04-20 09:30:21
 -->
<template>
  <div :class="regionStatistics.main">
    <div :class="regionStatistics.dateBox">
      <VForm :option="formDateOp" ref="formDate"></VForm>
    </div>
    <div :class="regionStatistics.btnBox">
      <span
        v-for="item in btnArr"
        :key="item.value"
        :class="[regionStatistics.changeBtn, btnActive == item.value ? regionStatistics.active : '']"
        @click="changeOpt(item.value)"
      >
        {{ item.name }}
      </span>
    </div>
    <div :class="regionStatistics.contentBox">
      <div :class="regionStatistics.barBox">
        <BorderBox title="" type="table">
          <BaseCharts :option="areaStackOption" :theme="'vintage'"></BaseCharts>
        </BorderBox>
      </div>
      <div :class="regionStatistics.barBox">
        <BorderBox title="" type="table">
          <VTable :option="tableOpt" :height="tableHeight" ref="table"></VTable>
        </BorderBox>
      </div>
    </div>
  </div>
</template>

<script lang="ts">
import { Component, Vue, Ref } from 'vue-property-decorator'
import { areaStackOption } from '@/views/Common/charts/chartsOption'
import dayjs from 'dayjs'
import BorderBox from '@/components/Common/BorderBox.vue'
interface IDefaultFormItems {
  startTime: string
  endTime: string
  ip?: string
}
@Component({
  components: {
    BorderBox
  }
})
export default class RegionStatistics extends Vue {
  @Ref() readonly formDate!: VP.VForm
  // 按钮切换选项
  private btnArr: object = [
    { name: '区域网站流量趋势', value: 0 },
    { name: '区域网站数趋势', value: 1 },
    { name: '区域网民流量趋势', value: 2 },
    { name: '区域网民数趋势', value: 3 }
  ]
  private btnActive: number = 0
  // 全局日期选择器
  private formItems: IDefaultFormItems = {
    startTime: dayjs().format('YYYY-MM-DD'),
    endTime: dayjs().format('YYYY-MM-DD')
  }
  private formDateOp: any = {
    inline: true,
    btnPos: 'left',
    items: [
      {
        label: '开始时间：',
        type: 'date',
        comOpt: {
          id: 'startTime',
          clearable: false,
          value: dayjs().format('YYYY-MM-DD'),
          type: 'date',
          disabled: false,
          pickOptions: {
            disabledDate: this.startDisable
          }
        }
      },
      {
        label: '结束时间：',
        type: 'date',
        comOpt: {
          id: 'endTime',
          clearable: false,
          value: this.formItems.endTime,
          type: 'date',
          disabled: false,
          pickOptions: {
            disabledDate: this.endDisable
          }
        }
      }
    ],
    btns: [
      {
        comOpt: {
          id: 'query',
          value: '查询',
          width: 90,
          disabled: false,
          click: this.handleQueryBtn
        }
      }
    ]
  }
  private tableOpt: any = {
    stripe: true,
    column: [
      { name: '区域', value: 'area', width: 55 },
      { name: '活跃度', value: 'webnum', width: 130, tooltip: true },
      { name: '网站请求流量(Bytes)', value: 'webup', tooltip: true },
      { name: '网站响应流量(Bytes)', value: 'webdown', tooltip: true },
      { name: '网站请求速率(bps)', value: 'webupBps', tooltip: true },
      { name: '网站响应速率(bps)', value: 'webdownBps', tooltip: true }
    ],
    data: [],
    pagination: false
  }
  private tableHeight = '100%'
  private areaStackOption: any = areaStackOption
  // 查询事件
  handleQueryBtn() {}
  // 选项卡切换
  private changeOpt(val) {
    this.btnActive = val
  }
  // 根据结束时间联动，不能大于结束时间
  startDisable(time: Date) {
    const endDateVal = this.formDate.getValue().endTime
    if (endDateVal) {
      return time.getTime() > new Date(endDateVal).getTime()
    }
  }
  // 根据开始时间联动，只能选择开始时间之前
  endDisable(time: Date) {
    const beginDateVal = this.formDate.getValue().startTime
    if (beginDateVal) {
      return time.getTime() < new Date(beginDateVal).getTime()
    }
  }
}
</script>
<style module="regionStatistics">
.main {
  width: 100%;
  height: 100%;
}
.dateBox {
  height: 40px;
}
.btnBox {
  height: 24px;
}
.changeBtn {
  display: inline-block;
  height: 24px;
  line-height: 23px;
  font-size: 12px;
  padding: 0px 20px;
  border: 1px solid #dcdcdc;
  border-radius: 1.5px;
  margin-right: 10px;
}
.changeBtn:hover {
  cursor: pointer;
  color: #fff;
  background: #66b1ff;
  border-color: #66b1ff;
}
.active {
  color: #fff;
  background: #2593f2;
  border-color: #2593f2;
}
.contentBox {
  height: calc(100% - 64px);
}
.barBox {
  height: calc(50% - 10px);
  margin-top: 10px;
}
</style>
