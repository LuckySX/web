/*
 * @Author: zhangjipei
 * @Date: 2020-05-09 14:48:03
 * @LastEditors: zhangjipei
 * @LastEditTime: 2020-05-12 23:07:27
 * @Description:
 */
import { getSession, getCookies } from '@/utils/cookiesUtil'
import { MessageBox } from 'element-ui'
import { Action } from 'vuex-class'

// 获取url参数
function getQueryString(name) {
  const winUrl: any = window.location.href
  const searchUrl = winUrl.match(/([^?]+)$/)[1]
  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')
  const r = searchUrl.substr(1).match(reg)
  if (r != null) return unescape(r[2])
  return null
}

function redirectUrl() {
  MessageBox.confirm('您已被登出1，请重新登录', '确定登出', {
    confirmButtonText: '重新登录',
    confirmButtonClass: 'btn-custom-confrim',
    type: 'warning'
  }).then(() => {
    // 需要确定参数、定向地址
    window.location.href =
      'https://iam.bamboocloud.com/idp/oauth2/authorize?redirect_uri=https://www.baidu.com&state=xxxx&client_id=xxxxx&response_type=code'
  })
}

export const mountRouter = router => {
  if (router.beforeEach) {
    router.beforeEach((to, from, next) => {
      console.log(to, from)
      if (to.path === '/login') {
        const userState = getQueryString('state')
        const userCode = getQueryString('code')
        console.log(userState, userCode)
        if (userState && userCode) {
          next()
        } else {
          console.log(getSession('env'))
          if (getSession('env') === '1') {
            redirectUrl()
          } else {
            next()
          }
        }
      } else {
        const hasUserId = getCookies('accessUserId')
        // 判断userId是否存在
        if (!hasUserId) {
          if (getSession('env') === '1') {
            redirectUrl()
          } else {
            next()
          }
        } else {
          const hasToken = getCookies('token')
          // 判断token是否存在
          if (!hasToken) {
            // next({ path: '/login' })
            if (getSession('env') === '1') {
              redirectUrl()
            } else {
              next()
            }
          } else {
            next()
          }
        }
      }
    })
  }
}
