<!--
 * @Author: niumiaomiao
 * @Date: 2020-03-21 21:57:40
 * @Description: 
 -->
<template>
  <div :class="pageBoxOne.main" class="sz">
    <VTable :option="tableOpt" :height="tableHeight"></VTable>
    <div :class="pageBoxOne.pageBox">
      <span @click="prevPage" :style="curPage === 1 || curPage === 0 ? 'opacity: 0.4;cursor: not-allowed;' : 'opacity: 1;cursor: pointer;'">
        <i class="el-icon-caret-left"></i>
      </span>
      <span>{{ curPage }}</span>
      &nbsp;/&nbsp;
      <span>{{ totalPage }}</span>
      <span @click="nextPage" :style="curPage === totalPage ? 'opacity: 0.4;cursor: not-allowed;' : 'opacity: 1;cursor: pointer;'">
        <i class="el-icon-caret-right"></i>
      </span>
    </div>
  </div>
</template>

<script lang="ts">
import { Component, Prop, Vue } from 'vue-property-decorator'
@Component({})
export default class BorderCon extends Vue {
  @Prop() private tableData!: number[]
  private tableOpt: any = {
    stripe: true,
    column: [
      { name: '国家', value: 'nationalname', width: 60 },
      { name: '攻击流量', value: 'attackflow' },
      { name: '流量占比', value: 'proportion', tooltip: true }
    ],
    data: []
  }
  private tableHeight = 230
  private pageSize = 6
  private curPage = 0
  private totalPage = 0
  private prevPage() {
    if (this.curPage !== 1 && this.curPage !== 0) {
      this.curPage--
      this.tableOpt.data = this.tableData.slice((this.curPage - 1) * this.pageSize, this.curPage * this.pageSize)
    }
  }
  private nextPage() {
    if (this.curPage !== this.totalPage) {
      this.curPage++
      this.tableOpt.data = this.tableData.slice((this.curPage - 1) * this.pageSize, this.curPage * this.pageSize)
    }
  }
  private pageChanged() {
    this.tableOpt.data = this.tableData.slice((this.curPage - 1) * this.pageSize, this.curPage * this.pageSize)
  }
  private loadData() {
    const tableData = this.tableData
    this.totalPage = Math.ceil(tableData.length / this.pageSize)
    this.curPage = tableData.length > 0 ? 1 : 0
    this.tableOpt.data = this.tableData.slice(0, this.pageSize)
  }
  mounted() {
    this.loadData()
  }
}
</script>

<style module="pageBoxOne">
.main {
  font-size: 12px;
  height: 100%;
}
.pageBox {
  width: 100%;
  height: 20px;
  margin-top: 8px;
  display: flex;
  justify-content: center;
  font-size: 16px;
  color: #fff;
}
.pageBox span:first-of-type {
  margin-right: 10px;
}
.pageBox span:last-of-type {
  margin-left: 10px;
}
</style>
